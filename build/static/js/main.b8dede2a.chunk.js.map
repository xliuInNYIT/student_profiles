{"version":3,"sources":["logo.svg","draft/header.js","draft/functionTest.js","draft/counter.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","Component","HeaderText","props","handleClick","bind","console","log","alert","this","onClick","User","name","age","sex","defaultProps","Counter","handleAddOne","handleMinusOne","handleReset","state","count","setState","prevState","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,G,MAAA,IAA0B,kC,kDCCpBA,E,4JACjB,WACI,OACI,gCACI,mDACA,cAAC,EAAD,CAAYC,MAAM,sB,GALEC,aAW9BC,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFL,E,+CAKlB,WACIC,QAAQC,IAAI,eACZC,MAAM,kB,oBAGV,WAEI,OADAF,QAAQC,IAAIE,KAAKN,OAEb,gCACI,4BAAIM,KAAKN,MAAMH,QACf,wBAAQU,QAASD,KAAKL,YAAtB,+B,GAhBSH,aCZnBU,EAAO,SAASR,GAClB,OACI,gCACI,uCAAUA,EAAMS,QAChB,sCAAST,EAAMU,OACf,yCAAYV,EAAMW,WAK9BH,EAAKI,aAAe,CAChBD,IAAK,QAEMH,QCVMK,E,kDACjB,WAAYb,GAAO,IAAD,8BACd,cAAMA,IAEDc,aAAe,EAAKA,aAAaZ,KAAlB,gBACpB,EAAKa,eAAiB,EAAKA,eAAeb,KAApB,gBACtB,EAAKc,YAAc,EAAKA,YAAYd,KAAjB,gBACnB,EAAKe,MAAQ,CACTC,MAAO,GAPG,E,0CAWlB,WACI,OACI,gCACI,cAAC,EAAD,CAAMT,KAAK,MAAMC,IAAI,OACrB,yCAAYJ,KAAKW,MAAMC,SACvB,wBAAQX,QAASD,KAAKQ,aAAtB,gBACA,wBAAQP,QAASD,KAAKS,eAAtB,gBACA,wBAAQR,QAASD,KAAKU,YAAtB,wB,0BAKZ,WACIb,QAAQC,IAAI,YACZE,KAAKa,UAAS,SAACC,GACX,MAAO,CACHF,MAAOE,EAAUF,MAAQ,Q,4BAKrC,WACIf,QAAQC,IAAI,aACZE,KAAKa,UAAS,SAACC,GACX,MAAO,CACHF,MAAOE,EAAUF,MAAQ,Q,yBAKrC,WACIf,QAAQC,IAAI,SACZE,KAAKa,UAAS,WACV,MAAO,CACHD,MAAO,U,GA9CcpB,aCyBtBuB,MAvBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCHOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b8dede2a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component} from 'react';\nexport default class Header extends Component {\n    render() {\n        return (\n            <div>\n                <p>This is the Header</p>\n                <HeaderText title=\"Test value\"/> \n            </div>\n        );\n    }\n}\n\nclass HeaderText extends Component {\n    constructor(props){\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        console.log('get clicked');\n        alert('handle Click');\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <div>\n                <p>{this.props.title}</p>\n                <button onClick={this.handleClick}> click it!</button>\n            </div>\n        );         \n    }\n}","const User = function(props) {\n    return (\n        <div>\n            <p>Name: {props.name}</p>\n            <p>Age: {props.age}</p>\n            <p>Gender: {props.sex}</p>\n        </div>\n    );\n};\n\nUser.defaultProps = {\n    sex: \"male\"\n}\nexport default User;","import React, { Component} from 'react';\nimport User from './functionTest';\n\nexport default class Counter extends Component {\n    constructor(props){\n        super(props);\n\n        this.handleAddOne = this.handleAddOne.bind(this);\n        this.handleMinusOne = this.handleMinusOne.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.state = {\n            count: 0\n        };\n    }\n\n    render(){\n        return (\n            <div>\n                <User name=\"Leo\" age=\"24\"/>\n                <h1>Count: {this.state.count}</h1>\n                <button onClick={this.handleAddOne}>+1</button>\n                <button onClick={this.handleMinusOne}>-1</button>\n                <button onClick={this.handleReset}>reset</button>\n            </div>\n        );\n    }\n\n    handleAddOne(){\n        console.log('plus one');\n        this.setState((prevState) =>{\n            return {\n                count: prevState.count + 1\n            };\n        });\n    }\n\n    handleMinusOne(){\n        console.log('minus one');\n        this.setState((prevState) =>{\n            return {\n                count: prevState.count - 1\n            };\n        });\n    }\n\n    handleReset(){\n        console.log('reset');\n        this.setState(() =>{\n            return {\n                count: 0\n            };\n        });\n    }\n}","import logo from './logo.svg';\nimport './App.css';\nimport Header from './draft/header';\nimport Counter from './draft/counter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n        <Counter />\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}